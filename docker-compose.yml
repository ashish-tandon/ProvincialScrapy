version: '3.8'

services:
  # NocoDB - Database and API
  nocodb:
    image: nocodb/nocodb:latest
    container_name: provincial-scrapy-nocodb
    ports:
      - "8080:8080"
    environment:
      - NC_DISABLE_CACHE=true
      - NC_DATABASE_URL=sqlite:///nocodb.db
    volumes:
      - nocodb_data:/usr/app/data/
    restart: unless-stopped
    networks:
      - provincial-network

  # MCP Server for Firecrawl integration
  mcp-server:
    build:
      context: ./mcp-server
      dockerfile: Dockerfile
    container_name: provincial-scrapy-mcp
    ports:
      - "3001:3001"
    environment:
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY}
      - NOCODB_URL=http://nocodb:8080
      - NOCODB_API_TOKEN=${NOCODB_API_TOKEN}
    depends_on:
      - nocodb
    restart: unless-stopped
    networks:
      - provincial-network

  # Main Scraping Application
  scraper-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: provincial-scrapy-app
    ports:
      - "8000:8000"
    environment:
      - NOCODB_URL=http://nocodb:8080
      - NOCODB_API_TOKEN=${NOCODB_API_TOKEN}
    depends_on:
      - nocodb
      - mcp-server
    restart: unless-stopped
    networks:
      - provincial-network
    volumes:
      - ./data:/app/data

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: provincial-scrapy-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - provincial-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: provincial-scrapy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - nocodb
      - mcp-server
      - scraper-app
    restart: unless-stopped
    networks:
      - provincial-network

volumes:
  nocodb_data:

networks:
  provincial-network:
    driver: bridge
